// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: proto/quiz/quiz/v1/quiz.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QuestionType int32

const (
	QuestionType_MULTIPLE_CHOICE   QuestionType = 0
	QuestionType_FILL_IN_THE_BLANK QuestionType = 1
	QuestionType_MATCHING_PAIRS    QuestionType = 2
	QuestionType_LISTENING         QuestionType = 3
	QuestionType_SPEAKING          QuestionType = 4
)

// Enum value maps for QuestionType.
var (
	QuestionType_name = map[int32]string{
		0: "MULTIPLE_CHOICE",
		1: "FILL_IN_THE_BLANK",
		2: "MATCHING_PAIRS",
		3: "LISTENING",
		4: "SPEAKING",
	}
	QuestionType_value = map[string]int32{
		"MULTIPLE_CHOICE":   0,
		"FILL_IN_THE_BLANK": 1,
		"MATCHING_PAIRS":    2,
		"LISTENING":         3,
		"SPEAKING":          4,
	}
)

func (x QuestionType) Enum() *QuestionType {
	p := new(QuestionType)
	*p = x
	return p
}

func (x QuestionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuestionType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_quiz_quiz_v1_quiz_proto_enumTypes[0].Descriptor()
}

func (QuestionType) Type() protoreflect.EnumType {
	return &file_proto_quiz_quiz_v1_quiz_proto_enumTypes[0]
}

func (x QuestionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuestionType.Descriptor instead.
func (QuestionType) EnumDescriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{0}
}

type StartQuizSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId string `protobuf:"bytes,1,opt,name=quizId,proto3" json:"quizId,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *StartQuizSessionRequest) Reset() {
	*x = StartQuizSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartQuizSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartQuizSessionRequest) ProtoMessage() {}

func (x *StartQuizSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartQuizSessionRequest.ProtoReflect.Descriptor instead.
func (*StartQuizSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{0}
}

func (x *StartQuizSessionRequest) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *StartQuizSessionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type StartQuizSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string           `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Quiz      *GetQuizResponse `protobuf:"bytes,2,opt,name=quiz,proto3" json:"quiz,omitempty"`
}

func (x *StartQuizSessionResponse) Reset() {
	*x = StartQuizSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartQuizSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartQuizSessionResponse) ProtoMessage() {}

func (x *StartQuizSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartQuizSessionResponse.ProtoReflect.Descriptor instead.
func (*StartQuizSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{1}
}

func (x *StartQuizSessionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *StartQuizSessionResponse) GetQuiz() *GetQuizResponse {
	if x != nil {
		return x.Quiz
	}
	return nil
}

type GetQuizSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *GetQuizSessionRequest) Reset() {
	*x = GetQuizSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuizSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizSessionRequest) ProtoMessage() {}

func (x *GetQuizSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizSessionRequest.ProtoReflect.Descriptor instead.
func (*GetQuizSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{2}
}

func (x *GetQuizSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetQuizSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string            `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Quiz      *GetQuizResponse  `protobuf:"bytes,2,opt,name=quiz,proto3" json:"quiz,omitempty"`
	Answers   map[string]string `protobuf:"bytes,3,rep,name=answers,proto3" json:"answers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // questionId -> selectedOption
}

func (x *GetQuizSessionResponse) Reset() {
	*x = GetQuizSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuizSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizSessionResponse) ProtoMessage() {}

func (x *GetQuizSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizSessionResponse.ProtoReflect.Descriptor instead.
func (*GetQuizSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{3}
}

func (x *GetQuizSessionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetQuizSessionResponse) GetQuiz() *GetQuizResponse {
	if x != nil {
		return x.Quiz
	}
	return nil
}

func (x *GetQuizSessionResponse) GetAnswers() map[string]string {
	if x != nil {
		return x.Answers
	}
	return nil
}

type SubmitQuizSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string    `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Answers   []*Answer `protobuf:"bytes,2,rep,name=answers,proto3" json:"answers,omitempty"`
}

func (x *SubmitQuizSessionRequest) Reset() {
	*x = SubmitQuizSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitQuizSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitQuizSessionRequest) ProtoMessage() {}

func (x *SubmitQuizSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitQuizSessionRequest.ProtoReflect.Descriptor instead.
func (*SubmitQuizSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{4}
}

func (x *SubmitQuizSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SubmitQuizSessionRequest) GetAnswers() []*Answer {
	if x != nil {
		return x.Answers
	}
	return nil
}

type SubmitQuizSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score    int32  `protobuf:"varint,1,opt,name=score,proto3" json:"score,omitempty"`
	Total    int32  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Feedback string `protobuf:"bytes,3,opt,name=feedback,proto3" json:"feedback,omitempty"`
}

func (x *SubmitQuizSessionResponse) Reset() {
	*x = SubmitQuizSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitQuizSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitQuizSessionResponse) ProtoMessage() {}

func (x *SubmitQuizSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitQuizSessionResponse.ProtoReflect.Descriptor instead.
func (*SubmitQuizSessionResponse) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{5}
}

func (x *SubmitQuizSessionResponse) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SubmitQuizSessionResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SubmitQuizSessionResponse) GetFeedback() string {
	if x != nil {
		return x.Feedback
	}
	return ""
}

type CreateQuizRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title     string      `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Questions []*Question `protobuf:"bytes,2,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *CreateQuizRequest) Reset() {
	*x = CreateQuizRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuizRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuizRequest) ProtoMessage() {}

func (x *CreateQuizRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuizRequest.ProtoReflect.Descriptor instead.
func (*CreateQuizRequest) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{6}
}

func (x *CreateQuizRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateQuizRequest) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type CreateQuizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId string `protobuf:"bytes,1,opt,name=quizId,proto3" json:"quizId,omitempty"`
}

func (x *CreateQuizResponse) Reset() {
	*x = CreateQuizResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateQuizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuizResponse) ProtoMessage() {}

func (x *CreateQuizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuizResponse.ProtoReflect.Descriptor instead.
func (*CreateQuizResponse) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{7}
}

func (x *CreateQuizResponse) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

type UpdateQuizRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId    string      `protobuf:"bytes,1,opt,name=quizId,proto3" json:"quizId,omitempty"`
	Title     string      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Questions []*Question `protobuf:"bytes,3,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *UpdateQuizRequest) Reset() {
	*x = UpdateQuizRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuizRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuizRequest) ProtoMessage() {}

func (x *UpdateQuizRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuizRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuizRequest) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateQuizRequest) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *UpdateQuizRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateQuizRequest) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type UpdateQuizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateQuizResponse) Reset() {
	*x = UpdateQuizResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuizResponse) ProtoMessage() {}

func (x *UpdateQuizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuizResponse.ProtoReflect.Descriptor instead.
func (*UpdateQuizResponse) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateQuizResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteQuizRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId string `protobuf:"bytes,1,opt,name=quizId,proto3" json:"quizId,omitempty"`
}

func (x *DeleteQuizRequest) Reset() {
	*x = DeleteQuizRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQuizRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuizRequest) ProtoMessage() {}

func (x *DeleteQuizRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuizRequest.ProtoReflect.Descriptor instead.
func (*DeleteQuizRequest) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteQuizRequest) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

type DeleteQuizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteQuizResponse) Reset() {
	*x = DeleteQuizResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteQuizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuizResponse) ProtoMessage() {}

func (x *DeleteQuizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuizResponse.ProtoReflect.Descriptor instead.
func (*DeleteQuizResponse) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteQuizResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetQuizResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuizId    string      `protobuf:"bytes,1,opt,name=quizId,proto3" json:"quizId,omitempty"`
	Title     string      `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Questions []*Question `protobuf:"bytes,3,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *GetQuizResponse) Reset() {
	*x = GetQuizResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuizResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuizResponse) ProtoMessage() {}

func (x *GetQuizResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuizResponse.ProtoReflect.Descriptor instead.
func (*GetQuizResponse) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{12}
}

func (x *GetQuizResponse) GetQuizId() string {
	if x != nil {
		return x.QuizId
	}
	return ""
}

func (x *GetQuizResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetQuizResponse) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type Question struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId    string       `protobuf:"bytes,1,opt,name=questionId,proto3" json:"questionId,omitempty"`
	Type          QuestionType `protobuf:"varint,2,opt,name=type,proto3,enum=kokoro.quiz.v1.QuestionType" json:"type,omitempty"`
	Text          string       `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Options       []string     `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	CorrectAnswer string       `protobuf:"bytes,5,opt,name=correctAnswer,proto3" json:"correctAnswer,omitempty"`
	MediaUrl      string       `protobuf:"bytes,6,opt,name=mediaUrl,proto3" json:"mediaUrl,omitempty"` // For audio or image files
}

func (x *Question) Reset() {
	*x = Question{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{13}
}

func (x *Question) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

func (x *Question) GetType() QuestionType {
	if x != nil {
		return x.Type
	}
	return QuestionType_MULTIPLE_CHOICE
}

func (x *Question) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Question) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Question) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

func (x *Question) GetMediaUrl() string {
	if x != nil {
		return x.MediaUrl
	}
	return ""
}

type Answer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestionId     string `protobuf:"bytes,1,opt,name=questionId,proto3" json:"questionId,omitempty"`
	SelectedOption string `protobuf:"bytes,2,opt,name=selectedOption,proto3" json:"selectedOption,omitempty"`
	TextAnswer     string `protobuf:"bytes,3,opt,name=textAnswer,proto3" json:"textAnswer,omitempty"`
}

func (x *Answer) Reset() {
	*x = Answer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Answer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Answer) ProtoMessage() {}

func (x *Answer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quiz_quiz_v1_quiz_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Answer.ProtoReflect.Descriptor instead.
func (*Answer) Descriptor() ([]byte, []int) {
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP(), []int{14}
}

func (x *Answer) GetQuestionId() string {
	if x != nil {
		return x.QuestionId
	}
	return ""
}

func (x *Answer) GetSelectedOption() string {
	if x != nil {
		return x.SelectedOption
	}
	return ""
}

func (x *Answer) GetTextAnswer() string {
	if x != nil {
		return x.TextAnswer
	}
	return ""
}

var File_proto_quiz_quiz_v1_quiz_proto protoreflect.FileDescriptor

var file_proto_quiz_quiz_v1_quiz_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x2f, 0x71, 0x75, 0x69,
	0x7a, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x22,
	0x49, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x75,
	0x69, 0x7a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x18, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x71, 0x75, 0x69, 0x7a, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x71, 0x75, 0x69, 0x7a, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0xf6, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x04, 0x71, 0x75, 0x69,
	0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f,
	0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x71, 0x75, 0x69, 0x7a, 0x12, 0x4d,
	0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a,
	0x0c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6a, 0x0a, 0x18, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75,
	0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x07, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x73, 0x22, 0x63, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51,
	0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x61, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72,
	0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2c, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x36,
	0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x71,
	0x75, 0x69, 0x7a, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x69,
	0x7a, 0x49, 0x64, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x69,
	0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x77, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x75, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f,
	0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xcc, 0x01, 0x0a,
	0x08, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f,
	0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x72,
	0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6f, 0x72, 0x72, 0x65, 0x63, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x22, 0x70, 0x0a, 0x06, 0x41,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x2a, 0x6b, 0x0a,
	0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a,
	0x0f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c, 0x45, 0x5f, 0x43, 0x48, 0x4f, 0x49, 0x43, 0x45,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x49, 0x4c, 0x4c, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x48,
	0x45, 0x5f, 0x42, 0x4c, 0x41, 0x4e, 0x4b, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x41, 0x54,
	0x43, 0x48, 0x49, 0x4e, 0x47, 0x5f, 0x50, 0x41, 0x49, 0x52, 0x53, 0x10, 0x02, 0x12, 0x0d, 0x0a,
	0x09, 0x4c, 0x49, 0x53, 0x54, 0x45, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x50, 0x45, 0x41, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x32, 0xbe, 0x04, 0x0a, 0x0b, 0x51,
	0x75, 0x69, 0x7a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x10, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f,
	0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x51, 0x75,
	0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69,
	0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6b, 0x6f, 0x6b,
	0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x68, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x69, 0x7a,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f,
	0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51,
	0x75, 0x69, 0x7a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x51, 0x75, 0x69, 0x7a, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x12, 0x21, 0x2e, 0x6b, 0x6f, 0x6b,
	0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x53, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x12,
	0x21, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75, 0x69, 0x7a,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x51, 0x75, 0x69, 0x7a, 0x12, 0x21, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2e, 0x71, 0x75,
	0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x75, 0x69, 0x7a,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6b, 0x6f, 0x6b, 0x6f, 0x72, 0x6f,
	0x2e, 0x71, 0x75, 0x69, 0x7a, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51,
	0x75, 0x69, 0x7a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x16, 0x5a, 0x14, 0x6b,
	0x6f, 0x6b, 0x6f, 0x72, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71, 0x75, 0x69, 0x7a,
	0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_quiz_quiz_v1_quiz_proto_rawDescOnce sync.Once
	file_proto_quiz_quiz_v1_quiz_proto_rawDescData = file_proto_quiz_quiz_v1_quiz_proto_rawDesc
)

func file_proto_quiz_quiz_v1_quiz_proto_rawDescGZIP() []byte {
	file_proto_quiz_quiz_v1_quiz_proto_rawDescOnce.Do(func() {
		file_proto_quiz_quiz_v1_quiz_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_quiz_quiz_v1_quiz_proto_rawDescData)
	})
	return file_proto_quiz_quiz_v1_quiz_proto_rawDescData
}

var file_proto_quiz_quiz_v1_quiz_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_quiz_quiz_v1_quiz_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_proto_quiz_quiz_v1_quiz_proto_goTypes = []interface{}{
	(QuestionType)(0),                 // 0: kokoro.quiz.v1.QuestionType
	(*StartQuizSessionRequest)(nil),   // 1: kokoro.quiz.v1.StartQuizSessionRequest
	(*StartQuizSessionResponse)(nil),  // 2: kokoro.quiz.v1.StartQuizSessionResponse
	(*GetQuizSessionRequest)(nil),     // 3: kokoro.quiz.v1.GetQuizSessionRequest
	(*GetQuizSessionResponse)(nil),    // 4: kokoro.quiz.v1.GetQuizSessionResponse
	(*SubmitQuizSessionRequest)(nil),  // 5: kokoro.quiz.v1.SubmitQuizSessionRequest
	(*SubmitQuizSessionResponse)(nil), // 6: kokoro.quiz.v1.SubmitQuizSessionResponse
	(*CreateQuizRequest)(nil),         // 7: kokoro.quiz.v1.CreateQuizRequest
	(*CreateQuizResponse)(nil),        // 8: kokoro.quiz.v1.CreateQuizResponse
	(*UpdateQuizRequest)(nil),         // 9: kokoro.quiz.v1.UpdateQuizRequest
	(*UpdateQuizResponse)(nil),        // 10: kokoro.quiz.v1.UpdateQuizResponse
	(*DeleteQuizRequest)(nil),         // 11: kokoro.quiz.v1.DeleteQuizRequest
	(*DeleteQuizResponse)(nil),        // 12: kokoro.quiz.v1.DeleteQuizResponse
	(*GetQuizResponse)(nil),           // 13: kokoro.quiz.v1.GetQuizResponse
	(*Question)(nil),                  // 14: kokoro.quiz.v1.Question
	(*Answer)(nil),                    // 15: kokoro.quiz.v1.Answer
	nil,                               // 16: kokoro.quiz.v1.GetQuizSessionResponse.AnswersEntry
}
var file_proto_quiz_quiz_v1_quiz_proto_depIdxs = []int32{
	13, // 0: kokoro.quiz.v1.StartQuizSessionResponse.quiz:type_name -> kokoro.quiz.v1.GetQuizResponse
	13, // 1: kokoro.quiz.v1.GetQuizSessionResponse.quiz:type_name -> kokoro.quiz.v1.GetQuizResponse
	16, // 2: kokoro.quiz.v1.GetQuizSessionResponse.answers:type_name -> kokoro.quiz.v1.GetQuizSessionResponse.AnswersEntry
	15, // 3: kokoro.quiz.v1.SubmitQuizSessionRequest.answers:type_name -> kokoro.quiz.v1.Answer
	14, // 4: kokoro.quiz.v1.CreateQuizRequest.questions:type_name -> kokoro.quiz.v1.Question
	14, // 5: kokoro.quiz.v1.UpdateQuizRequest.questions:type_name -> kokoro.quiz.v1.Question
	14, // 6: kokoro.quiz.v1.GetQuizResponse.questions:type_name -> kokoro.quiz.v1.Question
	0,  // 7: kokoro.quiz.v1.Question.type:type_name -> kokoro.quiz.v1.QuestionType
	1,  // 8: kokoro.quiz.v1.QuizService.StartQuizSession:input_type -> kokoro.quiz.v1.StartQuizSessionRequest
	3,  // 9: kokoro.quiz.v1.QuizService.GetQuizSession:input_type -> kokoro.quiz.v1.GetQuizSessionRequest
	5,  // 10: kokoro.quiz.v1.QuizService.SubmitQuizSession:input_type -> kokoro.quiz.v1.SubmitQuizSessionRequest
	7,  // 11: kokoro.quiz.v1.QuizService.CreateQuiz:input_type -> kokoro.quiz.v1.CreateQuizRequest
	9,  // 12: kokoro.quiz.v1.QuizService.UpdateQuiz:input_type -> kokoro.quiz.v1.UpdateQuizRequest
	11, // 13: kokoro.quiz.v1.QuizService.DeleteQuiz:input_type -> kokoro.quiz.v1.DeleteQuizRequest
	2,  // 14: kokoro.quiz.v1.QuizService.StartQuizSession:output_type -> kokoro.quiz.v1.StartQuizSessionResponse
	4,  // 15: kokoro.quiz.v1.QuizService.GetQuizSession:output_type -> kokoro.quiz.v1.GetQuizSessionResponse
	6,  // 16: kokoro.quiz.v1.QuizService.SubmitQuizSession:output_type -> kokoro.quiz.v1.SubmitQuizSessionResponse
	8,  // 17: kokoro.quiz.v1.QuizService.CreateQuiz:output_type -> kokoro.quiz.v1.CreateQuizResponse
	10, // 18: kokoro.quiz.v1.QuizService.UpdateQuiz:output_type -> kokoro.quiz.v1.UpdateQuizResponse
	12, // 19: kokoro.quiz.v1.QuizService.DeleteQuiz:output_type -> kokoro.quiz.v1.DeleteQuizResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_quiz_quiz_v1_quiz_proto_init() }
func file_proto_quiz_quiz_v1_quiz_proto_init() {
	if File_proto_quiz_quiz_v1_quiz_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartQuizSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartQuizSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuizSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuizSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitQuizSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitQuizSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuizRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateQuizResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQuizRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateQuizResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQuizRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteQuizResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQuizResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Question); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quiz_quiz_v1_quiz_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Answer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_quiz_quiz_v1_quiz_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_quiz_quiz_v1_quiz_proto_goTypes,
		DependencyIndexes: file_proto_quiz_quiz_v1_quiz_proto_depIdxs,
		EnumInfos:         file_proto_quiz_quiz_v1_quiz_proto_enumTypes,
		MessageInfos:      file_proto_quiz_quiz_v1_quiz_proto_msgTypes,
	}.Build()
	File_proto_quiz_quiz_v1_quiz_proto = out.File
	file_proto_quiz_quiz_v1_quiz_proto_rawDesc = nil
	file_proto_quiz_quiz_v1_quiz_proto_goTypes = nil
	file_proto_quiz_quiz_v1_quiz_proto_depIdxs = nil
}
